openapi: 3.0.0
info:
  title: Library API
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server

tags:
  - name: Books
    description: Operations with books
  - name: Authors
    description: Operations with authors

paths:
  /books:
    get:
      tags: [Books]
      summary: Get all books
      responses:
        200:
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookResponse'
    post:
      tags: [Books]
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        201:
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'

  /books/{book_id}:
    get:
      tags: [Books]
      summary: Get a book by ID
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        404:
          description: Book not found
    put:
      tags: [Books]
      summary: Update a book
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
      responses:
        200:
          description: Updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
    delete:
      tags: [Books]
      summary: Delete a book
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Book deleted
        404:
          description: Book not found

  /authors:
    get:
      tags: [Authors]
      summary: Get all authors
      responses:
        200:
          description: List of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorResponse'
    post:
      tags: [Authors]
      summary: Create new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorCreate'
      responses:
        201:
          description: Author created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'

  /authors/{author_id}:
    get:
      tags: [Authors]
      summary: Get author by ID
      parameters:
        - in: path
          name: author_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Author details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        404:
          description: Author not found
    put:
      tags: [Authors]
      summary: Update author
      parameters:
        - in: path
          name: author_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorUpdate'
      responses:
        200:
          description: Updated author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
    delete:
      tags: [Authors]
      summary: Delete author
      parameters:
        - in: path
          name: author_id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Author deleted
        404:
          description: Author not found

components:
  schemas:
    BookBase:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        genre:
          type: string
        year:
          type: integer
          format: int32
        cover_path:
          type: string
        book_path:
          type: string
        authors:
          type: array
          items:
            type: integer
          description: List of author IDs

    BookCreate:
      allOf:
        - $ref: '#/components/schemas/BookBase'
        - type: object
          required:
            - title
            - authors

    BookUpdate:
      $ref: '#/components/schemas/BookBase'

    BookResponse:
      allOf:
        - $ref: '#/components/schemas/BookBase'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            authors:
              type: array
              items:
                $ref: '#/components/schemas/AuthorResponse'

    AuthorBase:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        date_of_birth:
          type: string
          format: date
        description:
          type: string
        biography:
          type: string
        photo_path:
          type: string

    AuthorCreate:
      allOf:
        - $ref: '#/components/schemas/AuthorBase'
        - type: object
          required:
            - name
            - surname

    AuthorUpdate:
      $ref: '#/components/schemas/AuthorBase'

    AuthorResponse:
      allOf:
        - $ref: '#/components/schemas/AuthorBase'
        - type: object
          properties:
            id:
              type: integer
              format: int64 